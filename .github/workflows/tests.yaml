on:
  push:
    branches:
      - master
    paths:
      - "**.go"
      - "go.mod"
  pull_request:
    branches:
      - "**"
    paths:
      - "**.go"
      - "go.mod"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: read
  contents: read
  pull-requests: write
  security-events: write

name: tests
jobs:
  tests:
    strategy:
      matrix:
        go-version: [1.21.x, 1.22.x]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: teler-sh/actions/setup-go@v1
        with:
          go-version: '${{ matrix.go-version }}'
      - uses: teler-sh/actions/resources@v1
      - run: make ci
        if: (github.event_name != 'workflow_dispatch')

  sast:
    runs-on: ubuntu-latest
    needs: tests
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: teler-sh/actions/dependency-review@v1
        if: (github.event_name == 'push')
      - uses: teler-sh/actions/golangci-lint@v1
      - uses: teler-sh/actions/semgrep@v1
      # - uses: teler-sh/actions/bearer@v1
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      - uses: teler-sh/actions/codeql@v1
        with:
          lang: go

  regression:
    needs: tests
    uses: ./.github/workflows/regression.yaml

  codecov:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: teler-sh/actions/setup-go@v1
      - uses: teler-sh/actions/resources@v1
      - run: make cover-all
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.txt
          verbose: true
          fail_ci_if_error: true

  license-verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: teler-sh/actions/setup-go@v1
      - run: go install -v github.com/palantir/go-license@latest
      - run: make license-verify